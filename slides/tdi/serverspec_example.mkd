<section>
TDD with Serverspec
--------------------

red/green/refactor

<aside class="notes">

  * Let's try something called test driven development
  * Arose out of the agile programming methodology
  * Idea: write tests before you write your code
  * Only implement code for those tests
  * At any given time you have really good test coverage
    * If you're writing code, you know it has tests

  * so let's try setting up Apache with this approach

</aside>

<!--

So let's try something called test driven development. The idea is that you
write your tests before you write any code, and then write code to implement
these tests. Taking this approach means that you should have really good test
coverage, since if you're writing code, it already has a test.

-->

</section>

<section>

The tests
---------

~~~
require 'spec_helper'

describe "installing and configuring apache" do

  describe package('apache2') do
    it { should be_installed }
  end

  describe service('apache2') do
    it { should be_enabled }
    it { should be_running }
  end

  describe port(80) do
    it { should be_listening }
  end
end
~~~
{: .highlight .ruby }

<aside class="notes">

  * So let's lay down the tests for our apache code.
  * package: installed
  * service: enabled
  * service: running
  * port: listening

</aside>

</section>

<section>

The code
--------

~~~
class apache {
  # Look at all this potential!
}
~~~
{: .nohighlight }

<aside class="notes">
We implement nothing! Remember, we want to make sure the tests fail before we
continue.
</aside>

</section>

<section>

Red
---

~~~
root@debian-7-i386:/vagrant/modules/apache# puppet apply --modulepath /vagrant/modules/ -e 'include apache'
Notice: Compiled catalog for debian-7-i386.vagrantup.com in environment production in 0.02 seconds
Notice: Finished catalog run in 0.01 seconds
~~~
{: .nohighlight }

~~~
root@debian-7-i386:/vagrant/modules/apache# bundle exec rspec spec/systemspec/apache_spec.rb
FFFF

[...]

Finished in 0.11899 seconds (files took 3.71 seconds to load)
4 examples, 4 failures

Failed examples:

rspec ./spec/systemspec/apache_spec.rb:6 # installing and configuring apache Package "apache2" should be installed
rspec ./spec/systemspec/apache_spec.rb:10 # installing and configuring apache Service "apache2" should be enabled
rspec ./spec/systemspec/apache_spec.rb:11 # installing and configuring apache Service "apache2" should be running
rspec ./spec/systemspec/apache_spec.rb:15 # installing and configuring apache Port "80" should be listening
~~~
{: .nohighlight }

<aside class="notes">

First, we need to make sure that the tests fail. If we haven't written any code
and the tests pass then something has truly gone awry.

Yep, everything explodes.
</aside>

</section>
{: data-background="#9A3026" }

<section>

Implement
---------

~~~
class apache {
  package { 'apache2':
    ensure => present,
  }
}
~~~
{: .nohighlight }

<aside class="notes">

So let's actually make things work.

</aside>

</section>

<section>

Green
-----

~~~
root@debian-7-i386:/vagrant/modules/apache# puppet apply --modulepath /vagrant/modules/ -e 'include apache'
Notice: Compiled catalog for debian-7-i386.vagrantup.com in environment production in 0.15 seconds
Notice: /Stage[main]/Apache/Package[apache2]/ensure: ensure changed 'purged' to 'present'
Notice: Finished catalog run in 6.67 seconds
~~~
{: .nohighlight }

~~~
root@debian-7-i386:/vagrant/modules/apache# bundle exec rspec spec/systemspec/apache_spec.rb 
....

Finished in 0.08336 seconds (files took 3.6 seconds to load)
4 examples, 0 failures
~~~
{: .nohighlight }

<aside class="notes">

And run it - yay, it works!

</aside>

</section>
{: data-background="#008D66" }

<section>

Refactor
--------

<aside class="notes">

So at this point we could go in and clean things up if needed if we think
there's a better way of doing things. While we're refactoring we're not changing
any actual behavior; in this flow adding features and refactoring are strictly
separated.

</aside>

</section>

<section>
Let's break it!
------------

~~~
root@debian-7-i386:/vagrant/modules/apache# /etc/init.d/apache2 stop
[ ok ] Stopping web server: apache2 ... waiting .
~~~
{: .nohighlight }

~~~
root@debian-7-i386:/vagrant/modules/apache# puppet apply --modulepath /vagrant/modules/ -e 'include apache'
Notice: Compiled catalog for debian-7-i386.vagrantup.com in environment production in 0.02 seconds
Notice: Finished catalog run in 0.01 seconds
~~~
{: .nohighlight }

<aside class="notes">
Let's see if we can break the code in a manner that the puppet code won't fix
it.
</aside>

</section>

<section>

Red
---

~~~
root@debian-7-i386:/vagrant/modules/apache# bundle exec rspec spec/systemspec/apache_spec.rb 
..FF

[...]

Finished in 0.11485 seconds (files took 3.51 seconds to load)
4 examples, 2 failures
Failed examples: 
rspec ./spec/systemspec/apache_spec.rb:11 # installing and configuring apache Service "apache2" should be running
rspec ./spec/systemspec/apache_spec.rb:15 # installing and configuring apache Port "80" should be listening
~~~
{: .nohighlight }

<aside class="notes">

We never managed the service associated with this package, so we can turn off
the service, run our code, no changes are made and the tests fail.

</aside>

</section>
{: data-background="#9A3026" }

<section>

Fix
---

~~~
class apache {
  package { 'apache2':
    ensure => present,
  }

  service { 'apache2':
    ensure => running,
    enable => true,
  }
}
~~~
{: .nohighlight }

<aside class="notes">

Let's add a fix for this.

</aside>

</section>

<section>

Green
-----

~~~
root@debian-7-i386:/vagrant/modules/apache# puppet apply --modulepath /vagrant/modules/ -e 'include apache'
Notice: Compiled catalog for debian-7-i386.vagrantup.com in environment production in 0.20 seconds
Notice: /Stage[main]/Apache/Service[apache2]/ensure: ensure changed 'stopped' to 'running'
Notice: Finished catalog run in 0.16 seconds
~~~
{: .nohighlight }

~~~
root@debian-7-i386:/vagrant/modules/apache# bundle exec rspec spec/systemspec/apache_spec.rb 
....

Finished in 0.12574 seconds (files took 3.56 seconds to load)
4 examples, 0 failures
~~~
{: .nohighlight }

<aside class="notes">

Glorious, glorious success.

</aside>

</section>
{: data-background="#008D66" }
